name: Terraform Validations

on:
  push:
    branches:
      - 'feature/*'  # Trigger workflow only on feature branches
  pull_request:
    branches:
      - 'feature/*'  # Trigger workflow on pull requests to feature branches

env:
  AWS_REGION: us-east-1  # Global environment variable for AWS region
  TF_VERSION: 1.8.2      # Global environment variable for Terraform version

jobs:
  setup:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      workspace: ${{ steps.setup.outputs.workspace }}  # Share the workspace with other jobs
    steps:
      - name: Checkout Code
        id: setup
        uses: actions/checkout@v3

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf*') }}

  terraform_fmt:
    name: Terraform Format Check
    runs-on: ubuntu-latest
    needs: setup  # Runs after setup
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}  # Use global TF_VERSION

      - name: Run Terraform FMT
        run: terraform fmt -check -recursive -diff

  terraform_validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    needs: setup  # Runs after setup
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}  # Use global TF_VERSION

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Run Terraform Validate
        run: terraform validate

  tflint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    needs: setup  # Runs after setup
    steps:
      - name: Setup TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          terraform init -backend=false
          tflint --init
          mkdir -p test-reports
          tflint --format=junit --recursive --chdir=./iam > test-reports/tflint-report.xml || true

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: setup  # Runs after setup
    steps:
      - name: Setup Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          export PATH=$PATH:$(pwd)/bin  # Add the directory containing trivy to PATH
          terraform init -backend=false
          mkdir -p test-reports
          trivy config ./ -f template --template "/contrib/junit.tpl" --severity HIGH,CRITICAL --output test-reports/trivy-report.xml

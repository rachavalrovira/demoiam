name: Terraform Validations

on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'feature/*'

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
  security-events: write
  id-token: write

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.8.2

jobs:
  validations:
    name: Terraform Validations and Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf*') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Run Terraform FMT
        run: terraform fmt -check -recursive -diff

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Run Terraform Validate
        run: terraform validate

      - name: Setup TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          mkdir -p test-reports
          tflint --format=junit --recursive --chdir= > test-reports/tflint-report.xml || true

      - name: Upload TfLint Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-lint-report
          path: test-reports/tflint-report.xml

      - name: Setup Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          export PATH=$PATH:$(pwd)/bin
          trivy config ./ -f template --template "@contrib/junit.tpl" --severity HIGH,CRITICAL --output test-reports/trivy-report.xml || true
          trivy config ./ --severity HIGH,CRITICAL --format sarif --output trivy-results.sarif || true
          cat trivy-results.sarif

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: test-reports/trivy-report.xml
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: Trivy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  


  publish:
    name: Publish Test Results
    runs-on: ubuntu-latest
    needs: validations  # Publish after validations job completes
    steps:
      - name: Download TfLint Artifact
        uses: actions/download-artifact@v4
        with:
          name: tf-lint-report
          path: test-reports

      - name: Download Trivy Artifact
        uses: actions/download-artifact@v4
        with:
          name: trivy-report
          path: test-reports

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()  # Always run even if the validations job fails
        with:
          files: |
            test-reports/tflint-report.xml
            test-reports/trivy-report.xml
            
      # - name: Set badge color
      #   shell: bash
      #   run: |
      #     case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
      #       success)
      #         echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
      #         ;;
      #       failure)
      #         echo "BADGE_COLOR=800000" >> $GITHUB_ENV
      #         ;;
      #       neutral)
      #         echo "BADGE_COLOR=696969" >> $GITHUB_ENV
      #         ;;
      #     esac
      
      # - name: Create badge
      #   uses: emibcn/badge-action@808173dd03e2f30c980d03ee49e181626088eee8
      #   with:
      #     label: Tests
      #     status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
      #     color: ${{ env.BADGE_COLOR }}
      #     path: badge.svg
      
      # - name: Upload badge to Gist
      #   # Upload only for master branch
      #   if: >
      #     github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
      #     github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
      #   uses: andymckay/append-gist-action@6e8d64427fe47cbacf4ab6b890411f1d67c07f3e
      #   with:
      #     token: ${{ secrets.GIST_TOKEN }}
      #     gistURL: https://gist.githubusercontent.com/{user}/{id}
      #     file: badge.svg